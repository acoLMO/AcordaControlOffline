@using Agridea.Acorda.AcordaControlOffline.Shared.ApplicationServices.ViewModel.Signature

<EditForm Model="@Model" OnSubmit="@Save">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Signature</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="@nameof(Model.Signatory)">Nom</label>
                <InputText type="text" class="form-control" @bind-Value="@Model.Signatory" />
            </div>
            @if (Model.ShowProxy)
            {
                <div class="form-group">
                    <label for="@nameof(Model.Proxy)">Donne procuration à:</label>
                    <InputText type="text" class="form-control" @bind-Value="@Model.Proxy" />
                </div>
            }
            <div class="form-group">
                <label>Signature:</label>
                <SignaturePad  @ref="@signaturePad">
                    <SignaturePadFooter>
                        <SignaturePadClear />
                        <SignaturePadUndo />
                    </SignaturePadFooter>
                </SignaturePad>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary"><i class="far fa-save"></i> Enregistrer</button>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public SignatureModel Model { get; set; }

    SignaturePad signaturePad;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Loading signature with data: " + Model.Data);
        //await signaturePad.LoadSignature(Model.Data);
    }

    async Task Save(EditContext editContext)
    {
        Model.Data = await signaturePad.ToData();
        Model.DataUrl = await signaturePad.ToDataURL(SignaturePad.SupportedSaveAsTypes.png);
        Console.WriteLine($"Signature Data: {Model.Data}");
        Console.WriteLine($"Signature DataUrl: {Model.DataUrl}");
    }

}
