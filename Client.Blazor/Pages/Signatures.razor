@page "/Signatures/{FarmInspectionId:int}"
@using Agridea.Acorda.AcordaControlOffline.Client.Blazor.UiServices
@using Agridea.Acorda.AcordaControlOffline.Shared.ApplicationServices.LocalStore
@using Agridea.Acorda.AcordaControlOffline.Shared.ApplicationServices.ViewModel.Signature
@inject NavigationManager Navigation
@inject IRepository Repository

@if (actionsOrDocumentEditModel_ != null)
{
    <EditForm EditContext="actionsOrDocumentsEditContext_" OnSubmit="@FormSubmitted">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Remarques / Documents / Mesures</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-sm btn-default" @onclick='() => Navigation.NavigateTo(Config.BaseUrl + "/Checklist/1")'>
                        <i class="fas fa-arrow-left"></i>
                        Retour Check-Liste
                    </button>
                    <button type="button" class="btn btn-sm btn-success" @onclick='() => Navigation.NavigateTo(Config.BaseUrl + "/MandateDetail/1")'>
                        <i class="fas fa-arrow-right"></i>
                        Mandat
                    </button>
                </div>
            </div>

            <div class="card-body">
                <div class="form-group"></div>
                <div class="form-group">
                    <label for="@nameof(actionsOrDocumentEditModel_.CommentForFarmer)">Remarque générale</label>
                    <InputTextArea @bind-Value="@actionsOrDocumentEditModel_.CommentForFarmer" class="form-control" id="@nameof(actionsOrDocumentEditModel_.CommentForFarmer)"/>
                </div>
                <div class="form-group">
                    <label for="@nameof(actionsOrDocumentEditModel_.ActionsOrDocuments)">Documents à livrer / mesures à prendre</label>
                    <InputTextArea @bind-Value="@actionsOrDocumentEditModel_.ActionsOrDocuments" class="form-control" id="@nameof(actionsOrDocumentEditModel_.ActionsOrDocuments)"/>
                </div>
                <div class="form-group">
                    <label for="@nameof(actionsOrDocumentEditModel_.DueDate)">Délai</label>
                    <input type="date" @bind-value="@actionsOrDocumentEditModel_.DueDate" class="form-control" id="@nameof(actionsOrDocumentEditModel_.DueDate)"/>
                </div>

            </div>
            <div class="card-footer">
                @if (needsSaving)
                {
                    <button type="submit" class="btn btn-primary"><i class="far fa-save"></i> Enregistrer</button>
                }
                <button class="btn btn-default"><i class="far fa-file-pdf"></i> Rapport de contrôle provisoire</button>
            </div>
        </div>
    </EditForm>
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Signatures</h3>
    </div>
    <div class="card-body">
        <p>Content here</p>
    </div>
</div>

@code {
    [Parameter]
    public int FarmInspectionId { get; set; }

    ActionsOrDocumentEditModel actionsOrDocumentEditModel_;
    EditContext actionsOrDocumentsEditContext_;
    bool needsSaving = false;

    protected override async Task OnInitializedAsync()
    {
        actionsOrDocumentEditModel_ = await Repository.ReadActionsOrDocumentsAsync() ?? new ActionsOrDocumentEditModel();
        actionsOrDocumentsEditContext_ = new EditContext(actionsOrDocumentEditModel_);
        actionsOrDocumentsEditContext_.OnFieldChanged += (sender, args) =>
        {
            needsSaving = true;
        };
        await base.OnInitializedAsync();
    }

    async void FormSubmitted(EditContext editContext)
    {
        needsSaving = false;
        await Repository.SaveActionsOrDocumentsAsync((ActionsOrDocumentEditModel)editContext.Model);
    }
}
